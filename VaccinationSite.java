import java.util.*;
import java.io.*;

class VaccinationSite
{
  // Instance Variables
  private Random randy;
  private PriorityQueue<Patient> waitingQ;
  private LinkedList<Vaccine> vacSupply = new LinkedList<>();
  private ArrayList<Patient> vaccinated = new ArrayList<>();
  private Nurse[] nurses;
  private String siteName;
  private int currentTime = 0;

  // 4 param constructor
  public VaccinationSite(String siteName, int seed, int numNurses, int numVaccines)
  {
    this.siteName = siteName;
    // creates waitingQ obj using new instance of VacPriority as parameter; waitingQ prioritizes according to VacPriority rules
    // initialize with size 1 as first param
    waitingQ = new PriorityQueue<Patient>( 1, new VacPriority() );
    randy = new Random(seed);
    createNurses(numNurses);
    orderVaccines(numVaccines);
  }

  public void createNurses(int numNurses)
  {
    // create nurse array with length equal to numNurses value
    nurses = new Nurse[numNurses];

    // for each reference in the array it creates a nurse with a parameter one more than the array index
    for (int i = 0; i < numNurses; i++)
    {
      nurses[i] = new Nurse(i+1);
    }
  }

  public void orderVaccines(int numVaccines)
  {
    for (int i = 0; i < numVaccines; i++)
    {
      if (i % 3 == 0)
      {
        // create a new Moderna object & add to vacSupply LList
        vacSupply.add(new Moderna());
      }

      else
      {
        // create new Pfizer object and add to vacSupply LList
        vacSupply.add(new Pfizer());
      }
    }
  }

  public void openVaccinationSiteLine()
  {
    for(currentTime = 0; currentTime < 10; currentTime++)
    {
      // do 6 times
      for (int i = 0; i < 6; i++)
      {
        // generate a random number from 1 to 10 using randy and use it below
        int rand = randy.nextInt(1,11);

        // 50% of the time
        if (rand == 1 || rand == 2 || rand == 3 || rand == 4 || rand == 5)
        {
          // add a new Senior to the waitingQ with currentTime as param
          waitingQ.add(new Senior(currentTime));
        }

        // 40% of the time
        else if (rand == 6 || rand == 7 || rand == 8 || rand == 9)
        {
          // add a new Adult to the waitingQ with currentTime as param
          waitingQ.add(new Adult(currentTime));
        }

        // remaining 10% of the time
        else
        {
          // add a new OlderTeen to the waitingQ with currentTime as param
          waitingQ.add(new OlderTeen(currentTime));
        }
      }
    }
    // debug
    //System.out.println(waitingQ);
  }

  public void operateVaccinationSite(int durationForArriving)
  {
    // create an int variable endArrivalsTime; set = sum of currentTime + durationForArriving
    int endArrivalsTime = currentTime + durationForArriving;
    Patient tempPatient;
    Vaccine tempVaccine;

    // while size of vaccinated does not equal Patient.idCounter
    // OR
    // currenTime is less than the endArrivalsTime
    // I am extremely confused???? so I went with the below code instead
    while (waitingQ.peek() != null || currentTime < endArrivalsTime)
    {
      // if the currentTime is less than the endArrivalsTime
      if (currentTime < endArrivalsTime)
      {
        // Do 8 times
        for (int i = 0; i < 8; i++)
        {  
          // generate a random number with randy b/w 1 and 10
          int rand = randy.nextInt(1,11);

          // 50% of the time
          if (rand == 1 || rand == 2 || rand == 3 || rand == 4 || rand == 5)
          {
            // add a new Senior to the waitingQ with currentTime as param
            waitingQ.add(new Senior(currentTime));
          }

          // 40% of the time
          else if (rand == 6 || rand == 7 || rand == 8 || rand == 9)
          {
            // add a new Adult to the waitingQ with currentTime as param
            waitingQ.add(new Adult(currentTime));
          }

          // remaining 10% of the time
          else
          {
            // add a new OlderTeen to the waitingQ with currentTime as param
            waitingQ.add(new OlderTeen(currentTime));
          }
          
          // Check on busy nurses
          for(Nurse nurse : nurses)
          {
            // if the nurse isn't free (getIsFree returns false)
            if (nurse.getIsFree() == false)
            {
              // call decrementTimeRemainingForShot() for this nurse
              nurse.decrementTimeRemainingForShot();
  
              if (nurse.getTimeRemainingForShot() == 0)
              {
                // retrieve a reference to the Patient currently being treated by this nurse
                tempPatient = nurse.getAssignedPatient();
    
                // Add patient to vaccinated ArrayList
                vaccinated.add(tempPatient);
    
                // call setTotalTime for this patient with the currentTime
                tempPatient.setTotalTime(currentTime);
    
                // call removeAssignedPatient() for this nurse
                nurse.removeAssignedPatient();
              }
            }
          }

          // Assign patients to free nurses (comes after 1st for each loop)
          for(Nurse nurse : nurses)
          {
            // if isFree(() is true AND the waitingQ is not empty
            if (nurse.getIsFree() == true && waitingQ.peek() != null)
            {
              // if the size of vacSupply is 0
              if (vacSupply.size() == 0)
              {
                System.out.println("Ran out of vaccine! " + waitingQ.size() + "patients still waiting. Site shutting down!");
                // Then Immediately Return
                // This is not an "immediate return" : exiting vacSupply.size() = 0. Staying inside doesn't make any sense???
              }
              // remove a patient from the waitingQ
              tempPatient = waitingQ.remove();
  
              // call the setShotTime() for the patient with the currentTime
              tempPatient.setShotTime(currentTime);
              
              // Remove a vaccine from the vacSupply and call setVaccine for the patient with ref
              // to vaccine just removed from vaccSupply as param
              tempVaccine = vacSupply.remove();
              tempPatient.setVaccine(tempVaccine);
    
              // for this nurse call setAssignedPatient with Patient just removed from waitingQ
              nurse.setAssignedPatient(tempPatient);
    
              // Rando a number between 1 and 3; call setTimeRemainingForShot() with this val as param
              nurse.setTimeRemainingForShot(randy.nextInt(1, 4));
            }            
          }
        }
      }  
      // increment currentTime by 1;
      currentTime++;
    }
  }

  // write data to output file specified in String param
  public void generateVaccinationSiteResults(String outputName) throws Exception
  {    
    try
    {
      File file = new File(outputName);
      file.createNewFile();
      PrintWriter writer = new PrintWriter(file);

      writer.printf("Summary Data\n");

      // 3 parts of output:
      // 1: summary of # of shots given by each nurse
      for (int i = 0; i < nurses.length; i++)
      {
        writer.printf("Nurse %d gives shots to %d persons\n\n", nurses[i].getNurseIDNumber(),nurses[i].getTotalPatientsProcessedByNurse() );
      }
      
      // 2: average total time (2 dec places) by patient type, then for all patients
      // Separate vaccinated arrayList (using instanceOf) to collect the correct times
      // had some issues with null values initially so decided to sep these out
      int totalSeniors = 0;
      int totalAdults = 0;
      int totalTeens = 0;
      double totalTimeSeniors = 0;
      double totalTimeAdults = 0;
      double totalTimeTeens = 0;
      double SeniorAvg = 0;
      double AdultAvg = 0;
      double TeenAvg = 0;
  
      for (Patient patient : vaccinated)
      {
        if (patient instanceof Senior)
        {
          totalTimeSeniors += patient.getWaitTime();
          totalSeniors++;
        }
  
        else if(patient instanceof Adult)
        {
          totalTimeAdults += patient.getWaitTime();
          totalAdults++;
        }
  
        else if(patient instanceof OlderTeen)
        {
          totalTimeTeens += patient.getWaitTime();
          totalTeens++;
        }
  
        else{} // possible null value? idk
      }
  
      // aggregate the total amt of wait time over the total number of patients
      SeniorAvg = (totalTimeSeniors / totalSeniors);
      AdultAvg = (totalTimeAdults / totalAdults);
      TeenAvg = (totalTimeTeens / totalTeens);
  
      writer.printf("The average total time per person to vaccinate %d Seniors is %f minutes\n", totalSeniors, SeniorAvg);
      writer.printf("The average total time per person to vaccinate %d Adults is %f minutes\n", totalAdults, AdultAvg);
      writer.printf("The average total time per person to vaccinate %d Teenagers is %f minutes\n\n", totalTeens, TeenAvg);
      
      // 3: table of all patients
      // create an iterator for vaccinated arrayList
      Iterator<Patient> iterator = vaccinated.iterator();
  
      writer.printf("PATIENT ID     PATIENT TYPE     AGE     VACCINE     ARRIVAL TIME     WAIT TIME     TOTAL TIME     COST\n");
      while(iterator.hasNext())
      {
        Patient p = iterator.next();
        // I tried
        writer.printf("%15s%20s%20d%20d%20d%20.2f\n", p, p.getVacDose().getDoseID(), p.getArrivalTime(), p.getWaitTime(), p.getTotalTime(), p.getVacDose().getDoseCost());
      }
      // close writer when done
      writer.close();
    }

    catch(Exception e)
    {
      System.out.println(e.getMessage());
    }
  }

  // TFW It's Friday Night
  public void itsFridayNight()
  {
    System.out.println(",,,*///(((((((((((((((((((((////**,,,,,,,,,,,,...,**//////////////////////**,.......,,*(#%%%%%%%##########%%%%%%%%%#########(/(((##(#(((((#(###%%(((//#(#%((((((((//,,,,***//////////(((((((((##########");
    System.out.println("/**,,,*//(((((((((((((((((((((((///*,,,,,,,,,,,,...,,*///////////////////////**,,,*/(%%%%%%%%%#######%%%%%%%%%%%%%%%%%########(####(##(###%%####%########((#((((/*,,,,,****////////(((((((((############");
    System.out.println("////*,.,,*//(((((((((((((((((((((((//*,,,,,***,,,,,...,**//////////////////////((#%%%%%%%%%###%%%%%%%%%%%%%%%%%%%%%%######%%%%%%%%%%%%%%%%%%%%%%%%###%%%#%#(##/*,,,,*****////////((((((((###############");
    System.out.println("(((///*,..,*///((((((((((((((((((((((//**,,,,*,,,,,,,...,**////////////((((((#%%%%%%%&&&&&&&%%%%%%%%%%%%###%%%%%%%%%%%%%%%%%&&&%%%%#%%%%%%%%%%%%%%%%%%%%%%%##(/********////////((((((((((############(((");
    System.out.println("////////*,,..,*//((((((((((((((((((((((///*,,,,,,**,,,,,...,*/////////(((((#%%%%%&&&&&%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%###(/*****///*//(((((((((((###########(((((/");
    System.out.println("((((///////*,..,**//((((((((((((((((((((((//**,,,,,,,,,,,,...,**///////((##%%%%%%%%&&%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#%%%%%%%%%%%%%%%%%%%%%%%%%%%###%(/////////(((((((((((((####((((((((((/**");
    System.out.println("((((/////////*,...,*//((((((((((((((((((((((///*,,,,,,,,,,,,,...,*///((((#%#%%%%%%&%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%&%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#%%%#/////(((((((((((((((((#(((((((((/**,*/");
    System.out.println("((((((/////////**,...**//((((((((((((((((((((((///*,,,,,,,,,,,,...,*//(((#%%%%&%&%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%&&&%%%%%&&&&%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#(/(((((((((((((((((((((((((((/**,,*//(");
    System.out.println("//((((((//////////*,,..,*//(((((((((((((((((((((((//*,,,,,,,,,,,,....*/(##%%%%%&&&&&&&&%%%%%%%%%%%%%%%%%%%%%###(((#%%&&%%%&&&&&&&&%%&&&&&&&&&&%%%%&%%%&%%%%%%%%%#%##((((((((((((((((((((((((//*,,*///(((");
    System.out.println("(////(((((///////////*,..,*//(((((((((((((((((((((((//**,,,***,,,,,,,*/(##%%%%%%%%%%&&&&&&&&&&&&%%%%%%##((((((((((((#%%%%&&&&&&&&&&%%%&&&&&&&&&&&&%&&&&&%%%%%%%%%%%##(((((((((((((((((((((/*,,,**/(((((("); // 10 
    System.out.println("(((////((((((//////////*,,..,*//(((((((((((((((((((((((//*,,,***,,,*/((((###%&%%%%%%%%&&&&&&&&&%##((((((///////////((#%%&&&&&%%&&&&&&%%%&&&&&&&&&%&%&&&&%%%%%%%%%%%%#((((((((((((((((((//*,,,*///(((((((");
    System.out.println("##((((////(((((///////////*,..,*//((((((((((((((((((((((((//*,,,**,,********(%&&%%%%%%%%&&&&%#((////////////////////((#%%%%%%%%%&&&&&&&&&&&&&&&&&&&&&&%%##(/*#%%%%%%#(((((((((((((((//*,,,*///((((((((##");
    System.out.println("####((((////((((((//////////**,..,*/((((((((((((((((((((((((//*,,,,,,,,,,,,,,/%%%%%&&&%%%#(//////////////////////////((#%%%&&&%&&&&&&&&&&&&&&&&&&&%%%#((#((#%###*%%%%#((((((((((((/*,,,,*///((((((((####");
    System.out.println("#####(((((/////(((((///////////*,..,*//((((((((((((((((((((((((/**,,,*,,,,****/%####(((((((////////////((/(/////////////((((#%%%%&&&&&&&&&&&&&&&&%%#((%#(###(//(((#%%#(((((((((//*,,,,*////(((((((#####(");
    System.out.println("((#######((((////((((((//////////*,,..,*/((((((((((((((((((((((((//*,,,********/(#((((((((((/////////(((((////////////////////((#%%%&&&&&&&&&&&%%%#(/(#((((((////((/##((((((//*,,,,***///((((((((###((((");
    System.out.println("(((##########((//*//((((((/////////**,..,*//((((((((((((((((((((((((//*,***////((((((((((((((////(((((((/////((((((//////******////(#%%&&&&&&&&%%##//(((((#%%%#((/((((((((//*,,,,***///(((((((###(((((##");
    System.out.println("*/((((########((((//*/((((((//////////*,...,*/(((((((((((((((((((((((((////(((((((((((((((((((((((((((((///((((((((((((((//******/////#%%%&%%&&%%#(/*/((((((#%###(/((((///*,,,***////((((((((#((((((####");
    System.out.println(",,*/((((#########(((//*//((((((/////////**,..,*//((((((((((((((((##########(((((((((((#(((((((((((((((((/(((((##%%%%%%#(((((((//////////#%%%%%&%%%#(//((/*%%%%%%#/((#(/*,,,,**//////((((((((((((((#####%");
    System.out.println("/*,,,*/((((#########(((/**/((((((/////////**,,.,,*/((((((((((##############((((((((((####((((((((((((((/(((##%%%&%##((((((((/////////////(##%%%%%##(///////,%%#((((##*,,,***//////(((((((((((((#######%%");
    System.out.println("((//,,,,/((((#########(((//*//((((((/////////**,..,*//(((((#################((((((((##(##((((((((((////((#%%%##((((((###((((///////////////##%%%%%#(////////%#//((//**,**//////((((((((((((((######%%%%%"); //20
    System.out.println("(((((/*,.,*/(((##########(((/**/(((((((/////////*,,.,,//((#################(((((((((##((((((((/((/((((#%%%%#%%##%&##%##((((/////////////////(#%%%##((/////(((/////%#/**/////((((((((((((((######%%%%%%%#");
    System.out.println("(((((((//,,,*/(((###########((//*//(((((((//(((////*,,,,*/(###############((((((//(####((((((((//((##%#%%%%%%(((%%%#((((((((/////(((((((////(##%%###(////(((((///*(##(/////((((((((((/((######%%%%%%%##");
    System.out.println("/((###((((/*,,,*/((############((/**/((((((((((((////**,,*/(#############((((///////(#%%&%%%%#(((((((######%%%%##((((((((////////(((((((((((((######((//((((((((/./###((//(((((((///((######%%%%%####(/*");
    System.out.println("///(((((((((/*,,,*/((############((//*//(((((((((((((//////((#########(((((/////**///((##%#%%&&%%#(((#########((((((////////////(((((((((((((((######((//(/*((*,..,((((((((((((//((#####%%#%%%%%##((/**/");
    System.out.println("(//*//(((((((((/*,,,*/((############((/**/((((#((((((((((((#########((((((///////((((((((#%##%#%%#((########((((((((///////////(((((((((((((((((#####(////,///*,,..,((((((((///((####%%%%%%%%###(/***/(#");
    System.out.println("#((//**/((((((((((/*,,*/((############((//*//(((#((((((((((#####((((((((((/(((((####(((//(((######(((((((((((((((((///////////((((((((((((((((((#####((//**///**,,,,*////////(######%%%%%%%###(/**/(####");
    System.out.println("####((/**//(((####(((*,,,*(((############((////((###((((((((((((/**,*///((((#########((((((((((###(((((((((((((((////////////((((((((((((((((((((####(((/**////***,.,*,,*//(###############(/**//(####%%");
    System.out.println("#######(/***/((######((/*,,*/((#############((////((###((((((((///*,,,,/((############(((((((((###((((((((((((((/////////////(((((((((((((((((((((###((((*/(///***,,.,*,./(#########(/(((/***/(#####%%%#");
    System.out.println("%%#######((/**/((######((/*,,,*((##############(////((####((((((////**/((############(((((((((((##((((((#######(((//////////(((((((((((((((((((((((#((((//(((//***,,.,,**.#&%&&&&&%(*****,,/((####%####(");
    System.out.println("##%%%#######(//*/((#######((/*,,*/((#############((///(((((((((((/(((#############(((((((((((((((#((((((((((((##(((((////////((((((((((((((((((((((((((((((((//****,.,,****/%&%(///**,.,,,**/(######(((("); //30
    System.out.println("##%%%%%%%#####((/*//((######((/*,,,*/(##############(////(((((((((##############(((((((((((((((((#((/////(/((###((((/////////((((((((((((((((((((((####((((((///****,,,**//(((///////**(******/(((///(##");
    System.out.println("###%%%%%%%%%#####(//*/((#######((/*,,*/(##############((/*//(((####%%%#####(((((((((((((((((((((/(////(#%%%###(((((((((//////(((((((((((((((((((((######((((((//*****,*/((((#%#(((((/*,,******/**//(##%%");
    System.out.println("#########%%%%%#####((///(((#######(/*,,,*((#############((////(##%%%%####(((((((((((((((((((((/////(((###((((((((((((((((///(((((((((((((((((((((######(((((((///**/#((#(&&%%##///*,,.,**,*(*  .*/(##%%%");
    System.out.println("#########%%%%%%%%%####(////(########((/*,,*/((#############(((##%%%####(((((((((((((((((((((((///////(######(((((((((((((((((((((((((((((((((((#######(((((((((/(#(#%%%##%##%#((///*///*,       .*(##%%%");
    System.out.println("###########%%%%%%%%%%####(///(########((/*,,,*/(#############%%%%%####((////(((((((((((((((((///////*/(####(((((((((##%%%##((((((((((((((((((#########((((((((##%%%%%#%%&/((((/(####*          ..,./(###");
    System.out.println("((##########%%%%%%%%%%%#%##((///(########((/*,,*/((########%%%%%%##((//////((((((((((((((((((/////*****/#######%%%%###(((((((((((((((((((((####%%#####(((((#%%%%%%%%%#(*#*##%(#((.       .,**/*,.   .*((");
    System.out.println("(((((#########%%%%%%%%%%%%%###(///((########((/*,*/((#####%%%%%%###(/****/////((((((((((((((((////******/(%%#####(((((((((((((((((((((######%%%#######(##%%%#%%%%%##//(%#((((/         ,/*****,         ");
    System.out.println("###((((###%#####%%%%%%%%%%%%%%##(////((########(/*,,*/(###%%%%####((((/******///((((((((((((((((////******/(########((((((((((((((((#####%%%%##########%%####%%%%#/%%#%%##,       .*//**,,*,            ");
    System.out.println("##%###(((###%%%####%%%%%%%%%%%%%###(///((#########(/***/(#########((((((//*******//////////((((((///////****(((#####((((((((((((((####%%%%%########%%#####%%%&##(###%##(.   .,*///****,.                ");
    System.out.println("###%%%##((((##%%%%%##%%%%%%%%%%%%%%%##(///(#########((/**/(#########((((((//*************///(((((((///////////(#####(((((((((((####%%%%%%#######%%&#%#%%%&&%#%&%####%*..../(/*/*//*                     "); //40
    System.out.println("*((###%%###(((###%%%%##%%%%%%%%%%%%%%%##(///((#########((////(#######(((((((//**,,*,,,,,,**/(((((((///////////(#######(((((######%%%&%%%#####%%&&%%##%%&&&&&%%%%%%#,.,*((///*/,                         ");
    System.out.println("***/(###%%%##(((##%%%%%%#%%%%%%%%%%%%%%%%##(///(##########(/**/((#######((((((//***,,****,**/(/****//////////*//*############%%%%%%%#%####%&&&%%%(#%%%&&&&&&%&%#//((///**//.                            ");
    System.out.println("#(/***(###%%%%##(((##%%%%%%%%%%%%%%%%%%%%%%%#(///((#########(/***/((######(((((((//********///*,.....,,***//*///((%%%%%%%%%%%####%%%###%&&&&%%%##%%&%&&&&&%##%//(///*#/,....                            ");
    System.out.println("%%##(***/(##%%%%%##((##%%%%%%%%%%%%%%%%%%%%%%%%#(///((###%#####(/**/((#######((((((///***/(((/*,,..........*///#%%&&&%#((#%%%%%%%&&(%&&&&%%%##%%%%%%&&&&%%%%#(///(/,,,.....                             ");
    System.out.println("%%%%##(/*,*(##%%%%%%#(((#%%%%%%%%%%%%%%%%%%%%%%%%##(///(##%%%%####(///((#########(((((((((##(/***,,,,,,...,/#%#&%&&%%#%&%&&&%%&%#%&&&&%%%###%%%%#%%%&&&%%%(//*#/,,,,...      ..,,..                     ");
    System.out.println("%%%%%%%##(/*/(#%%%%%%%##((#%%%%%%%%%%%%%%%%%%%%%%###((//(##%%%%%%%###((((###############%%%#####((((((/**/%#%%%&%&%%&&#%%%%%%%%&%%%%%%#((##%%%&%%&%%%&&#///#(,,,,..,*/*,..              .....           ");
    System.out.println("%%%%%%%%%%%###%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#(**,.*/###%%%%%%%%%%%%%%%%%%%%%%%&%%%&&&&&&&&&&&&&%%%%%%%%%%%##%%%%##(#%%&%#&%%%%%&%(((%&&&&&&&&%&&###/*%(,,*,,*,//*,,,,,,.,.,...                       ");
    System.out.println("%%%%%#%#########%%%%%%%%%%%%%%%%%%%%%%%%%%####(((((//*,,/####%%%%%%%%%%%%%%%%%%%&&&&&&&&&&&&&&&&&&&%%%%%(/(%&&&%%&#%&%&&%&&%%#%&#(((#&&&&&&&&%%%%#%#/#(**/,*(*#######(#((/((///,,,,.,...               ");
    System.out.println("%%%%%%%%###(((###%%%%%%%%%%%%%%%%%%%%%%%%%%%##(////////*,/####%%%%%%%%%%%%%%%%%&&&&&&&&&&&&&&&&&&&%#(####%%%#%%%%%%&%%&%%%%%%%%#%%#&&&&&&&&%&&%#%(((*//*((/#%#((((#####//////**,******,*,,*,,.          ");
    System.out.println("%%%%%%%%%&%%%%%%%%%%%%&&&&&&&&&&&&&&&&&&&&%%%%%((((((((/*,(#%%%%%%#####%%%%%%%%&&%%%%%%%%%%%%&&%%%%%#%##%&&&&&%%&&%%%%%%%%%%%%%##%%&&&&&&%%%#%&((,(#%##(%%####((/((#######((/**,,,,,,,,/(((//,,..       "); //50
    System.out.println("&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&%%&%%####((((((*./#%#####(/*,,,/(#%%%%%%%%%%%%%%%%&&&%%%%%%%%#%%%%%%%%&&&%%%%##%###%%%%&%%%&&&#%&%%#*#%%##(%%%###%##((((((((######//**,,,,,/(((((/(/*,,.      ");
    System.out.println("&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&%%%%%%%#######((/*.,/(#%%##((//*,,,/#%%%%%%%%%%&&&&&&&&&%%%%(/*/##%##%&&&&&%%##%%%%&&%(#%%&#&&&%(*##%%%%#((&%%%%%%%#######(######(##(/*,.,**/////((//*,....    ");
    System.out.println("%&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&%%(//(%%%%%%#####(((/,**/#%%%%%##(((//*,*(%%&&&@@@@@@@@@@&&&&%(,.*//##%%#%&&&&&%%%#####%%#%%*.%%##(/%%%%%%%//&%%%%%%(%##%%#########(###/*.,*,,,,.,*****,,,,,,...  ");
    System.out.println("%&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&%%%%%%%###(((///****///,///#((((##(##((((((///#&&&@@@@@@@&&&%#/**/////((##%&&&&&&&%#%%%#%%%#%%%%%(*#%%%%#((//%&%&&&&%%%%%%#%##########((/*,......,****//****,.,,,,..");
    System.out.println("&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&%%###############(((////***/((((((##(((/((((/*(%&&&&@@&&&&%#//**///((((((#%&&&&&@&&%#%%%%%#%%%%#//#%%%#(((//#&&%&&&%%%%%%%%%%%#########(/*,....,,,*/******,,,**,,,,.");
    System.out.println("&&&&&&&&@@@&&&&@@@@@@@@@@@@@@@@@&&&&%###(#(((((((###((((((((((((//*,,//((((//((///*(%&&&&&&&%#///////(/(((((((#%&&&&&@@%%%%%##%%%%#/(#%%##(/(**(&&&&&&%%%%%%%%%############/,,,.,,,,******,.,*******,,,.");
    System.out.println("&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@&&&&#//(##########((((((((((((###(((**,,*(((//((/**//#%&&&%%(////////(//(((((/##&&&@@@&&&&%%(#%%%#//((###(//(/*/&&&&&&&%%%%%%%############((**,,,,****,,,,,**********,.,,");
    System.out.println("&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@&&&&#//(##########((((((((((((###(((**,,*(((//((/**//#%&&&%%(////////(//(((((/##&&&@@@&&&&%%(#%%%#//((###(//(/*/&&&&&&&%%%%%%%############((**,,,,****,,,,,**********,.,,");
    System.out.println("&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@&&&&%####((((((/(#######(((((((((((((///*,.*((((////*/#%%%#(////////(((/(((((/(%%&&&&&&&&&%%(#%%%(/(((##(///(/**(&&&&&&%%%%%%############(((/**,*******,,,*********,,*,,,,");
    System.out.println("&&&&&&&@@@@@@@@@@@@@@@@@@@@@@&&%(%%%%%%%%#####(((///*/(####((((((//////*,,,,///////(##(///////(((((///((((/(%%&&&&@&&&%%#(%%%%/((/((((//*///***%&&&&%%%%%###########((((((**/*****,,,*********,*****,,,,"); //60
    System.out.println("&&&&&&@@@@@@@@@@@@@@@@@@@@&&&&%(%%#((((((((((((((#####(((((//*/(((((//////*,/(######(////((((((((////((((/(%%&&&&&&&&&&#(%&%%*((//(((//***//***%%%%%%%%###########(((///*/////**,,*********,**********,.");
    System.out.println("&&&&&&@&@@@@@@@@@@@@@@@@@&&&&###%%#((((((((((//(((((((((#(##((/(#%%(((((((/*#(#%##(/////((((////////((((/(%%&&&&&&&&&&((%%%#,((///((//****//***%%%%#%##########((((//**/////***////*****,**********,,,*,");
    System.out.println("&&&&&@@@@@@@@@@@@@@@@@&&&&&&(##&&&&%######((((((((((((/((((((((((##%/.*(((#%%%((//////(((///////////(((/(%%&&&&&&&&&%(#%%%#*/((///((//****//*(%%%%###########((((//*/**********//****,********/*,******,");
    System.out.println("&&&&&&&@@@@@@@@@@@@@@&&&&&%(##%&&%%%%%%%%########((((((//(((/////((****,#%&&%%#//(/((///////////////((//#%&&&&&&&%%%(#%%%%**///*//(//*,***/(%%%%#########((((((/////****,********************,**********");
    System.out.println("&&&&&&&&@@@@@@@@@@&&@&&&&&(#&%&&&%###########%%%%&&&&%#((((/////////////#%&&&&#//((///////*/////**//((/(%%&&&&&%#%%(#%%%%/*////*////*,*,,/%%%%%#####((#((//(/////****,**********,********,,***********,,");
    System.out.println("&&&&&&&&@&&&&@@@@&&&&&&&&%(%&#%&&&##(((((((((((((((######%%%#*,*(//(((#%#%&&&&%////////*/////**/*//((//#%%&&&&&#%%#(###%(*////**///**,,*%%%%%%####(((((/////*///*************,*********,***********,****");
    System.out.println("&&&&&&&&&&&&&&&&&&&&&&&&&%(%&#%&&&%#((((//////////////((((((//**%&&&%%%%%%&&&&#/////*/////***/*/*//((//%&%&&&&%%#%((####****/***//**,,(%%%%%##(((((((/////**//************,,*******,**********,,,*******");
    System.out.println("&&&&&&&&&&&&&&&&&&&&&&&&&%(%&##&&&%%((((///////////////////////((#%&&%%%#%&&&%///**/////*****/***/((/*#%%%&&&&%#%%/(##%/,*******//*,*%%%%###((((((//////***/**,********,,********,********,,,********,**");
    System.out.println("&&&&&&&&&&&&&&&&&&&&&&&&&%(%&%#%&&%(/((////////////////(////((###%%&&%##%&&&&////////**/*********/((*/%%%&&&&%%%%(/((#(,********/**#%%%###(((((///////************,,,,,*******,********,,*******,,,*****");
    System.out.println("&&&&&&&&&&&&&&&&&&&&&&&&&%((&&#((%%#(/////////////////////((((%%%%%%%(#%&&&&/*////**/*/*/********/(/*(%%#&&%%&&%#/((#%******,***(%%%###((((((//////*******,*****,,,,,,,,,*,,,*******,*******,,,*******,,"); //70
    System.out.println("&&&&&&&&&&&&&&&&&&&&&&&&&%#/*%&%(#(%%#(((//////////////////(((#%#((##%&&&&(,*/////////***********/(//#%%#&%%%%%%//((#(,/,*****/%%%##(((((////////*******,,****,,,,,,,,,,,,,******,,******,,******,,,,,,,");
    System.out.println("&&&&&&&&&&&&&&&&&&&&&&&&&%#(/*/&&#(/##%%#(/////////////////##(((###%%&&&#***(///////**//*********/(*/#%##%%%%%%(//((#**/*****%%%##(((((/////**********,*****,,,,,,,,,,,,,,,,,*,,,*****,,**,,*,,,,,,,,,,,");
    System.out.println("&&&&&&&&&&&&&&&&&&&&&&&&%%#////*%&%%%%###%%##((((###(((((((####%%%%&&&%*,**//(///****************((*/#&%%%%%%%#////#(*(/,*/%%%#(((((//*/****,******,,****,*,,,,,,,,,,,,,,,,,,,*,,**,,***,,,,,,,,,,,,,,,,");
    System.out.println("&&&&&&&&&&&&&&&&&&&&&&&&%%(/////*/%&&&%%%%%%%%###########%%%%%%%&&&&%*,,*/////*,******,******,,**(/*(#%%%#%%%%(**//#**(*/%%##((((//*//***,******,,*****,,,,,,,,,,,,,,,,,,,,,,,,,,,,**,,,,,,,,,,,,,,,,,,,");
    System.out.println("&&&&&&&&&&&&&&&&&&&&&&&&%%(/**//**,#&%#/(%%%%%%%%%%%%%%%%%%%%&&&%(,,,,****///******,,*****,,*****(/*(%&%%%%%%#/**/((,/#%%##(((//******,******,,*****,,,,,,,,,,,,,,,,,,,,,,,,,,,,**,,,,,,,,,,,,,,,,,,,,,,");
    System.out.println("&&&&&&&&&&&&&&&&&&&&&&&&%#(/***//**,*/%%#(//%&&&&%%%%%%&%%%&%#*,,,,,,******/(***,,*****,,,*****,*(/*(%&%%%%%%(***/(/(%%##((//******,,*****,,,*****,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,*");
    System.out.println("&&&&&&&&&&&&&&&&&&&&&&&&%#(/*****//***,,/%#((/*(%&&%%%#((/,,,,,,,,,*********/,,******,,******,,*/(**#%%%%%%%%/**//#%%##((/*//***,,*****,,***,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,.,,,,,,,,,,,,,,***");
    System.out.println("&&&&&&&&&&&&&&&&&&&&&&&&%%#/*****/##(/**,,*(#(/***,,,,,,,,,,,,,,,*,,********(*****,,******,,****/(*/#%%%%%%%(**/%%%###(//****,,*****,,,*,**,,,,,,,,,,,,,,,,,,,,,,,,,,,,,*,,,,,,,,,,,,,,,,,,,,,,,,,,,****");
    System.out.println("&&&&&&&&&&&&&&&&&&&&&&&&%%((/**,**#%#(#(***,,,/***,,,,,,,,,,,,,,,**,*******/(**,,*******,*******//*/#&#%#%%%/(%%%%##(///***,*****,,,*,**,,,,,,,,,,,,,,,,,,,,,,,,,,,,,**,,,,,,,,,,,,,,,,,,,,,,,,,,***,**,");
    System.out.println("&&&&&&&&&&&&&&&&&&&&&&&&%#(((/*,*/%##%#/(**,,,,***,,,,,,,,,,,***,*********/((********,********,*(/*(#%#%%%%%%%%####(//*********,,*****,,,,*,,*,,,,,,,,,,,,,,,,,,,,**,,,,,,,,,,,,,,,,,,,,,,,,,,*******,**"); //80
  }
}